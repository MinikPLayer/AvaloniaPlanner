<UserControl xmlns="https://github.com/avaloniaui"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:viewModels="clr-namespace:AvaloniaPlanner.ViewModels"
             xmlns:views="clr-namespace:AvaloniaPlanner.Views"
			 xmlns:dh="clr-namespace:DialogHostAvalonia;assembly=DialogHost.Avalonia"
             xmlns:icons="clr-namespace:Material.Icons.Avalonia;assembly=Material.Icons.Avalonia"
			 xmlns:models="clr-namespace:AvaloniaPlanner.Models"
			 mc:Ignorable="d" d:DesignWidth="960" d:DesignHeight="540"
             x:Class="AvaloniaPlanner.Views.MainView"
             Foreground="White"
             Background="Transparent">
    <Design.DataContext>
        <viewModels:MainViewModel />
    </Design.DataContext>
	
	<dh:DialogHost x:Name="TestDialog" Identifier="TestDialog"
		DialogMargin="16" HorizontalAlignment="Stretch" VerticalAlignment="Stretch"
		dh:DialogHostStyle.CornerRadius="8">
		<dh:DialogHost.DialogContent>
			<StackPanel>
				<TextBlock Text="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType=views:MainWindow}, Path=DataContext.DialogMessage, Mode=OneWay}"/>
				<Button Content="OK!" Command="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType=dh:DialogHost}, Path=CloseDialogCommand}"/>
			</StackPanel>
		</dh:DialogHost.DialogContent>
		<SplitView IsPaneOpen="{Binding	IsPaneOpened, Mode=TwoWay}"
				   DisplayMode="CompactOverlay" 
				   OpenPaneLength="400" CompactPaneLength="45">
			<SplitView.Styles>
				<Style Selector="Button">
					<Setter Property="Padding" Value="5"/>
					<Setter Property="HorizontalContentAlignment" Value="Left"/>
				</Style>
				<Style Selector="Button:not(:pressed):not(:pointerover)">
					<Setter Property="Background" Value="Transparent"/>
				</Style>
			</SplitView.Styles>
			<SplitView.Pane>
				<Border Background="#40000000">
					<StackPanel Margin="5">
						<Button Command="{Binding PaneOpenedStateChangedCommand}" HorizontalAlignment="Left" VerticalAlignment="Top">
							<Grid>
								<icons:MaterialIcon Kind="ArrowCollapseLeft" IsVisible="{Binding IsPaneOpened}" Width="25" Height="25"/>
								<icons:MaterialIcon Kind="ArrowCollapseRight" IsVisible="{Binding !IsPaneOpened}" Width="25" Height="25"/>
							</Grid>
						</Button>
						<Separator Foreground="{DynamicResource PrimaryHueDarkBrush}" Height="20"/>
						<ItemsRepeater Items="{Binding PaneEntries}">
							<ItemsRepeater.ItemTemplate>
								<DataTemplate DataType="models:PaneEntryModel">
									<Button HorizontalAlignment="Stretch">
										<StackPanel Orientation="Horizontal" HorizontalAlignment="Left" Spacing="10">
											<icons:MaterialIcon Kind="{Binding Icon}" Width="25" Height="25"/>
											<TextBlock VerticalAlignment="Center" FontSize="20" Text="{Binding Name}" IsVisible="{Binding $parent[views:MainView].DataContext.IsPaneOpened}"/>
										</StackPanel>
									</Button>
								</DataTemplate>
							</ItemsRepeater.ItemTemplate>
						</ItemsRepeater>
					</StackPanel>
				</Border>
			</SplitView.Pane>
			
			<ContentPresenter Content="{Binding CurrentPage}" HorizontalAlignment="Stretch" VerticalAlignment="Stretch"/>
		</SplitView>

	</dh:DialogHost>

</UserControl>
